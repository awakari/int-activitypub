apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ include "int-activitypub.fullname" . }}-secrets-backup"
spec:
  schedule: "{{ .Values.secret.backup.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: "{{ include "int-activitypub.fullname" . }}-secrets-backup"
          containers:
            - name: "{{ include "int-activitypub.fullname" . }}-tls-secret-backup"
              image: "{{ .Values.secret.backup.image }}"
              {{- if .Values.ingressHttpV1.tls }}
              {{- range .Values.ingressHttpV1.tls }}
              command:
                - "/bin/sh"
                - "-c"
                - |
                  original_secret=$(kubectl get secret {{ .secretName }} -o jsonpath='{.data.tls.crt}')  # Retrieve the secret data
                  if [ -n "$original_secret" ]; then  # Check if secret is not empty
                    echo "Original secret is not empty. Creating backup..."
                    kubectl get secret {{ .secretName }} -o yaml | sed 's/name: \(.*\)/name: \1-backup/' | kubectl apply -f -  # Create backup
                  else
                    echo "Original secret is empty. Skipping backup."
                  fi
              {{- end}}
              {{- end}}
          restartPolicy: OnFailure
